["videourl_list", {"media": {"down": "videourl_list", "type": "thread", "params": {"url": "https://www.youtube.com/watch?v=Vw8ViaL7-m4", "regexp": "onclick=\"location.href='(?P<videourl>.+?)'\"  value=\"Click Here to Play\" />", "compflags": "re.DOTALL", "enabled": false}, "name": "media"}, "videourl_list": {"type": "thread", "params": {"url": "http://kodi.wiki/", "regexp": "(?#<SEARCH>)esto es <search> el criterio", "compflags": "0", "enabled": false}, "name": "videourl_list", "up": "media"}, "rootmenu": {"type": "list", "params": {"enabled": false}, "name": "rootmenu"}}]
{"addon_id": "plugin.video.urlplay", "addon_requires": "xbmc.python,2.1.0,|script.module.urlresolver,2.4.0,|script.module.metahandler,1.0.0,|script.module.addon.common,1.0.0,|script.common.plugin.cache,1.0.0,", "addon_name": "playUrlIDE", "addon_resources": "basicFunc.py,resources/lib,,"}
{"media": "def media():\n    import urlresolver\n    url = args.get(\"url\")[0]\n    regexp = r'http://(?P<videoHost>[^/]+)/(?P<videoId>[^.]+)'\n    match = re.search(regexp, url)\n    url = urlresolver.HostedMediaFile(host = match.group(\"videoHost\"), media_id = match.group(\"videoId\")).resolve()\n    li = xbmcgui.ListItem(path = url)\n    li.setProperty('IsPlayable', 'true')\n    li.setProperty('mimetype', 'video/x-msvideo')\n    return xbmcplugin.setResolvedUrl(handle=addon_handle,succeeded=True,listitem=li)\n", "videourl_list": "def videourl_list():\n    if args.has_key('searchkeys'):\n        searchKeys = args.get('searchkeys')[0]\n        searchKeys = searchKeys.split('+')\n        menuContent = []\n        for elem in searchKeys:\n            searchLabel, searchId = map(lambda x: x.strip(), elem.split('*'))\n            menuContent.append([{'searchid':searchId, 'menu': 'videourl_list'}, {'isFolder': True, 'label': 'videourl_list by ' + searchLabel}, None])            \n        return menuContent\n    import xml.etree.ElementTree as ET\n    searchId     = args.get('searchid', ['all'])[0]\n    savedsearch = xbmc.translatePath('special://profile')\n    savedsearch = os.path.join(savedsearch, 'addon_data', 'plugin.video.urlplay','savedsearch.xml')\n    root = ET.parse(savedsearch).getroot() if os.path.exists(savedsearch) else ET.Element('searches')\n        \n    if not args.has_key(\"tosearch\") and os.path.exists(savedsearch):\n        existsSrch = root.findall(\"search\")\n        if searchId != \"all\":\n            existsSrch = [elem for elem in existsSrch if elem.get(\"searchid\") == searchId] \n        menuContent = [] \n        for elem in existsSrch:\n           menuContent.append([{'menu':elem.get('menu'), 'url':elem.get('url')}, {'isFolder': True, 'label': elem.get('tosearch')}, None])\n        if menuContent:\n            menuContent.insert(0,[{'menu':'videourl_list', 'tosearch':'==>', 'searchid':searchId}, {'isFolder': True, 'label': 'Search by ' + searchId}, None])\n            return menuContent\n\n    kb = xbmc.Keyboard(\"\", \"New video url\", False)\n    kb.doModal()\n    if not (kb.isConfirmed()):return EMPTYCONTENT\n    kbText = kb.getText()\n    searchId, srchUrl = kbText.split(',')\n    existsSrch = [elem for elem in root.findall(\"search\") if elem.get(\"url\") == srchUrl]\n    if not existsSrch:\n        toInclude = ET.Element('search', url = srchUrl, tosearch = srchLabel, menu = \"media\", searchid = searchId)\n        root.insert(0, toInclude)\n        if not os.path.exists(os.path.dirname(savedsearch)):os.mkdir(os.path.dirname(savedsearch)) \n        ET.ElementTree(root).write(savedsearch)\n    return [[{'menu':'medida', 'url': srchUrl}, {'isFolder': False, 'label': 'Search by ' + searchId}, None]]\n", "rootmenu": "def rootmenu():\n    return videourl_list()\n", "_codeframe_": "<header>\n<rootmenu>\n\n\n\n<videourl_list>\n\n\n<media>\n\n\n\n\n\nbase_url = sys.argv[0]\naddon_handle = int(sys.argv[1])\nargs = urlparse.parse_qs(sys.argv[2][1:])\nxbmcplugin.setContent(addon_handle, 'movies')\n\nmenu = args.get('menu', None)\n\nmenuFunc = menu[0] if menu else 'rootmenu'\nmenuItems = eval(menuFunc + '()')\nif menuItems: makeXbmcMenu(addon_handle, base_url, menuItems)\n"}
