["module_xbmcaddon", {"rename": {"params": {"enabled": false}, "type": "list", "name": "rename", "up": "file"}, "getInfoImage": {"sibling": "getIpAddress", "params": {"enabled": false}, "type": "list", "name": "getInfoImage", "up": "get"}, "executeScript": {"sibling": "executeJsonRpc", "params": {"enabled": false}, "type": "list", "name": "executeScript", "up": "execute"}, "exists": {"sibling": "rename", "params": {"enabled": false}, "type": "list", "name": "exists", "up": "file"}, "translatepath": {"sibling": "sleep", "params": {"enabled": false}, "type": "list", "name": "translatepath", "up": "file_path"}, "getFreeMem": {"sibling": "getCleanMovieTitle", "params": {"enabled": false}, "type": "list", "name": "getFreeMem", "up": "get"}, "diectory": {"name": "diectory", "up": "mod_xbmcvfs", "down": "listdir", "sibling": "classes", "params": {}, "type": "list"}, "sleep": {"sibling": "makelegalfilename", "params": {"enabled": false}, "type": "list", "name": "sleep", "up": "file_path"}, "file": {"name": "file", "up": "mod_xbmcvfs", "down": "copy", "sibling": "diectory", "params": {}, "type": "list"}, "class_stat": {"params": {"enabled": false}, "type": "list", "name": "class_stat", "up": "classes"}, "log": {"params": {"enabled": false}, "type": "list", "name": "log", "up": "file_path"}, "getInfoLabel": {"sibling": "getInfoImage", "params": {"enabled": false}, "type": "list", "name": "getInfoLabel", "up": "get"}, "media": {"type": "thread", "params": {"url": "https://www.youtube.com/watch?v=Vw8ViaL7-m4", "regexp": "onclick=\"location.href='(?P<videourl>.+?)'\"  value=\"Click Here to Play\" />", "compflags": "re.DOTALL"}, "name": "media"}, "mkdir": {"sibling": "rmdir", "params": {"enabled": false}, "type": "list", "name": "mkdir", "up": "diectory"}, "classes": {"down": "class_file", "params": {}, "type": "list", "name": "class", "up": "mod_xbmcvfs"}, "rmdir": {"params": {"enabled": false}, "type": "list", "name": "rmdir", "up": "diectory"}, "getsupportedmedia": {"sibling": "getRegion", "params": {"enabled": false}, "type": "list", "name": "getsupportedmedia", "up": "get"}, "mod_xbmcvfs": {"name": "xbmcvfs", "up": "rootmenu", "down": "file", "sibling": "module_xbmc", "params": {}, "type": "list"}, "file_path": {"down": "validate_path", "params": {}, "type": "list", "name": "file_path", "up": "module_xbmc"}, "listdir": {"sibling": "mkdirs", "params": {"enabled": false}, "type": "list", "name": "listdir", "up": "diectory"}, "getCacheThumbName": {"params": {"enabled": false}, "type": "list", "name": "getCacheThumbName", "up": "get"}, "get": {"name": "get", "up": "module_xbmc", "down": "getsupportedmedia", "sibling": "execute", "params": {}, "type": "list"}, "rootmenu": {"down": "mod_xbmcvfs", "type": "list", "params": {}, "name": "rootmenu"}, "mkdirs": {"sibling": "mkdir", "params": {"enabled": false}, "type": "list", "name": "mkdirs", "up": "diectory"}, "getLanguage": {"sibling": "getInfoLabel", "params": {"enabled": false}, "type": "list", "name": "getLanguage", "up": "get"}, "copy": {"sibling": "delete", "params": {"enabled": false}, "type": "list", "name": "copy", "up": "file"}, "getIpAddress": {"sibling": "getFreeMem", "params": {"enabled": false}, "type": "list", "name": "getIpAddress", "up": "get"}, "module_xbmcgui": {"sibling": "module_xbmcaddon", "params": {"enabled": false}, "type": "list", "name": "xbmcgui", "up": "rootmenu"}, "execute": {"name": "execute", "up": "module_xbmc", "down": "executeScript", "sibling": "file_path", "params": {}, "type": "list"}, "getRegion": {"sibling": "getLocalizedString", "params": {}, "type": "list", "name": "getRegion", "up": "get"}, "class_file": {"sibling": "class_stat", "params": {"enabled": false}, "type": "list", "name": "class_file", "up": "classes"}, "module_xbmc": {"name": "xbmc", "up": "rootmenu", "down": "get", "sibling": "module_xbmcgui", "params": {}, "type": "list"}, "getCleanMovieTitle": {"sibling": "getCacheThumbName", "params": {"enabled": false}, "type": "list", "name": "getCleanMovieTitle", "up": "get"}, "module_xbmcaddon": {"sibling": "module_xbmcplugin", "params": {}, "type": "list", "name": "xbmcaddon", "up": "rootmenu"}, "makelegalfilename": {"sibling": "log", "params": {"enabled": false}, "type": "list", "name": "makelegalfilename", "up": "file_path"}, "convertLanguage": {"params": {"enabled": false}, "type": "list", "name": "convertLanguage", "up": "execute"}, "getLocalizedString": {"sibling": "getLanguage", "params": {"enabled": false}, "type": "list", "name": "getLocalizedString", "up": "get"}, "validate_path": {"sibling": "translatepath", "params": {"enabled": false}, "type": "list", "name": "validate_path", "up": "file_path"}, "executeJsonRpc": {"sibling": "convertLanguage", "params": {"enabled": false}, "type": "list", "name": "executeJsonRpc", "up": "execute"}, "module_xbmcplugin": {"params": {"enabled": false}, "type": "list", "name": "xbmcplugin", "up": "rootmenu"}, "delete": {"sibling": "exists", "params": {"enabled": false}, "type": "list", "name": "delete", "up": "file"}}]
{"addon_id": "plugin.video.xbmcmodule", "addon_requires": "xbmc.python,2.1.0,|script.module.metahandler,2.9.0,", "addon_name": "XBMC modules Test", "addon_resources": "basicFunc.py,resources/lib,True,basicFunc.py|CustomRegEx.py,resources/lib,True,CustomRegEx.py"}
{"rename": "def rename():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef diectory():\n    menuContent = []\n    menuContent.append([{'menu': 'listdir'}, {'isFolder': True, 'label': 'listdir'}, None])\n    menuContent.append([{'menu': 'mkdirs'}, {'isFolder': True, 'label': 'mkdirs'}, None])\n    menuContent.append([{'menu': 'mkdir'}, {'isFolder': True, 'label': 'mkdir'}, None])\n    menuContent.append([{'menu': 'rmdir'}, {'isFolder': True, 'label': 'rmdir'}, None])\n    return menuContent\n", "getInfoImage": "def getInfoImage():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef getIpAddress():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "executeScript": "def executeScript():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "translatepath": "def translatepath():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef sleep():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "getFreeMem": "def getFreeMem():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\n\ndef getCleanMovieTitle():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "class_stat": "def class_stat():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\n\ndef class_stat():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "log": "def log():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "rmdir": "def rmdir():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef classes():\n    menuContent = []\n    menuContent.append([{'menu': 'class_file'}, {'isFolder': True, 'label': 'class_file'}, None])\n    menuContent.append([{'menu': 'class_stat'}, {'isFolder': True, 'label': 'class_stat'}, None])\n    return menuContent\n", "getsupportedmedia": "def getsupportedmedia():\n    line1 = 'video:   ' + xbmc.getSupportedMedia('video')\n    line2 = 'music:   ' + xbmc.getSupportedMedia('music')\n    line3 = 'picture: ' + xbmc.getSupportedMedia('picture')\n    dialog = xbmcgui.Dialog()\n    ok = dialog.ok('xbmc.getSupportedMedia', line1, line2, line3)\n    return\n\ndef getRegion():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "listdir": "def listdir():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "getLocalizedString": "def getLocalizedString():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "_codeframe_": "<header>\n<rootmenu>\n\n<mod_xbmcvfs>\n\n<file>\n\n<copy>\n\n<delete>\n\n<rename>\n\n<listdir>\n\n<mkdirs>\n\n<rmdir>\n\n<class_file>\n\n<class_stat>\n\n<module_xbmc>\n\n<get>\n\n<getsupportedmedia>\n\n<getLocalizedString>\n\n<getLanguage>\n\n<getInfoImage>\n\n<getFreeMem>\n\n<getCacheThumbName>\n\n<executeScript>\n\n<executeJsonRpc>\n\n<file_path>\n\n<validate_path>\n\n<translatepath>\n\n<makelegalfilename>\n\n<log>\n\n<module_xbmcgui>\n\n<module_xbmcplugin>\n\nbase_url = sys.argv[0]\naddon_handle = int(sys.argv[1])\nargs = urlparse.parse_qs(sys.argv[2][1:])\nxbmcplugin.setContent(addon_handle, 'movies')\n\nmenu = args.get('menu', None)\n\nmenuFunc = menu[0] if menu else 'rootmenu'\nmenuItems = eval(menuFunc + '()')\nif menuItems: makeXbmcMenu(addon_handle, base_url, menuItems)\n", "mkdirs": "def mkdirs():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef mkdir():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "getLanguage": "def getLanguage():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef getInfoLabel():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "copy": "def copy():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "module_xbmcgui": "def module_xbmcgui():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef module_xbmcaddon():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "class_file": "def class_file():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "makelegalfilename": "def makelegalfilename():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\n\ndef makelegalfilename():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "getCacheThumbName": "def getCacheThumbName():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef execute():\n    menuContent = []\n    menuContent.append([{'menu': 'executeScript'}, {'isFolder': True, 'label': 'executeScript'}, None])\n    menuContent.append([{'menu': 'executeJsonRpc'}, {'isFolder': True, 'label': 'executeJsonRpc'}, None])\n    menuContent.append([{'menu': 'convertLanguage'}, {'isFolder': True, 'label': 'convertLanguage'}, None])\n    return menuContent\n", "validate_path": "def validate_path():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "executeJsonRpc": "def executeJsonRpc():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef convertLanguage():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n", "module_xbmcplugin": "def module_xbmcplugin():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef media():\n    import urlresolver\n    li = xbmcgui.ListItem(path = url)\n    if args.get(\"icondef\", None): li.setThumbnailImage(args[\"icondef\"][0])\n    if args.get(\"labeldef\", None): li.setLabel(args[\"labeldef\"][0])\n    li.setProperty('IsPlayable', 'true')\n    li.setProperty('mimetype', 'video/x-msvideo')\n    return xbmcplugin.setResolvedUrl(handle=addon_handle,succeeded=True,listitem=li)\n", "delete": "def delete():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n\ndef exists():\n    return [[{}, {\"label\":\"NotImplemented option\"}, {}]]\n"}
