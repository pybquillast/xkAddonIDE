["nav_tabs", {"listadded": {"name": "listadded", "numid": 1, "up": "media", "down": "episode", "params": {"url": "http://www.primewire.ag/watch-2753133-Gore-Quebec", "regexp": "<span class=\"movie_version_link\">.+?writeln\\('<a href=\"(?P<url>[^\"]+?)\".+?writeln\\('(?P<label>.+?)'\\)", "compflags": "re.DOTALL|re.IGNORECASE"}, "type": "thread"}, "pwire_movies": {"name": "pwire_movies", "numid": 2, "up": "listadded", "down": "season_pwire_movies_lnk", "sibling": "pagediscrim", "params": {"icondefflag": 1, "url": "http://www.primewire.ag", "discrim": "urlin", "labeldefflag": 1, "compflags": "re.DOTALL", "op_addonInfo": "movie*(?P<name>.+?) \\((?P<year>\\d+)\\)", "headregexp": "Genre: <-><span>([^ ]+) [^>]+> <strong>[^<]+</strong></span>|<li><a href=\"(?P<url>[^\"]+genre=[^&\"]+)\">(?P<label>.+?)</a></li><=>Sort by: <-><span>[^>]+> <strong>([^<]+)</strong></span>|<li><a href=\"(?P<url>[^\"]+&*sort=[^\"]+)\">(?P<label>.+?)</a></li>", "regexp": "<div class=\"index_item index_item_ie\">\\s*?<a href=\"(?P<url>.+?)\" title=\"Watch (?P<label>.+?)\"><img src=\"(?P<iconImage>.+?)\" [^>]+>", "contextmenus": ",", "nextregexp": "Get Next Page >>><->|<a href=\"(?P<url>[^\"]+page[^\"]+)\">(?P<label>.+?)</a>"}, "type": "thread"}, "playlist_list": {"name": "playlist_list", "numid": 3, "up": "playlist_media", "down": "nav_tabs_playlist_list_lnk", "sibling": "season_playlist_media_lnk", "params": {"option": "3", "url": "http://www.primewire.ag/playlists.php?sort=hits", "compflags": "re.DOTALL|re.IGNORECASE", "headregexp": "Sort by <-><span class=\"index_show_by_selected\"><a [^>]+>(.+?)</a></span>|<span class=\"index_show_by_(?:not)*selected\"><a href=\"(?P<url>.+?)\">(?P<label>.+?)</a></span>", "regexp": "<td width=\"90\">.+?src=\"(?P<iconImage>[^\"]+)\".+?<strong><a href=\"(?P<url>.+?)\">(?P<label>.+?)</a>(?P<label1>.+?)</strong>", "contextmenus": ",", "nextregexp": "Next>>><->|</span> <a href=\"(?P<url>.+?)\">(?P<label>.+?)<"}, "type": "thread"}, "nav_tabs": {"name": "nav_tabs", "numid": 4, "up": "pwire_movies", "down": "playlist_list_nav_tabs_lnk", "params": {"url": "http://www.primewire.ag/", "plainnode": 1, "discrim": "option", "compflags": "re.DOTALL|re.IGNORECASE", "regexp": "<li class=\"[un]*pressed\"><a href=\"(?P<url>[^\"]+)\" title=\"[WLP].+?\">(?P<label>.+?)</a></li>", "contextmenus": ","}, "type": "thread"}, "season_pagediscrim_lnk": {"name": "season", "numid": 5, "up": "pagediscrim", "sibling": "pwire_copy", "params": {"source": true}, "type": "link"}, "season_playlist_media_lnk": {"type": "link", "numid": 6, "params": {"source": true}, "name": "season", "up": "playlist_media"}, "media": {"down": "listadded", "params": {"url": "http://www.primewire.ag/external.php?gd=1890549585&title=Donnie+Darko&url=aHR0cDovL3d3dy5wcm9tcHRmaWxlLmNvbS9sL0VFMjdCMUM0QTktREE5MEVGOTBCNg==&domain=cHJvbXB0ZmlsZS5jb20=&loggedin=0", "regexp": "<noframes>(?P<videourl>[^<]+)</noframes>", "compflags": "re.DOTALL", "enabled": false}, "numid": 7, "type": "thread", "name": "media"}, "pwire_copy": {"name": "pwire_copy", "numid": 8, "up": "pagediscrim", "down": "buscar", "params": {"": "", "icondefflag": 1, "url": "http://www.primewire.ag", "labeldefflag": 1, "compflags": "re.DOTALL", "regexp": "<div class=\"index_item index_item_ie\">\\s*?<a href=\"(?P<url>.+?)\" title=\"Watch (?P<label>.+?)\"><img src=\"(?P<iconImage>.+?)\" [^>]+>", "contextmenus": ",", "nextregexp": "Next>>><->|</span> <a href=\"(?P<url>.+?)\">"}, "type": "thread"}, "rootmenu": {"params": {"": "", "contextmenus": ",", "codenode": 0}, "numid": 9, "type": "list", "name": "rootmenu"}, "playlist_list_nav_tabs_lnk": {"params": {"source": true}, "numid": 10, "type": "link", "up": "nav_tabs", "name": "playlist_list"}, "pagediscrim_season_lnk": {"params": {}, "numid": 11, "type": "link", "name": "pagediscrim", "up": "season"}, "playlist_media": {"name": "playlist_media", "numid": 12, "up": "listadded", "down": "playlist_list", "sibling": "pwire_movies", "params": {"icondefflag": 1, "url": "http://www.primewire.ag/playlists.php?id=41731", "discrim": "urlout", "labeldefflag": 1, "urlin": "/tv-", "compflags": "re.DOTALL|re.IGNORECASE", "regexp": "<img src=\"(?P<iconImage>[^\"]+)\".+?<a href=\"(?P<url>[^\"]+)\">(?P<label>[^<]+)</a> (?P<label1>\\( [\\d]+ \\))", "contextmenus": ","}, "type": "thread"}, "pwire_movies_season_lnk": {"name": "pwire_movies", "numid": 13, "up": "season", "sibling": "playlist_media_season_lnk", "params": {}, "type": "link"}, "pagediscrim": {"name": "pagediscrim", "numid": 14, "up": "listadded", "down": "season_pagediscrim_lnk", "params": {"url": "https://www.primewire.ag/watch-2747802-In-Search-of-Aliens-online-free", "regexp": "<title>[^<]+\\((?P<discrim>.+?)\\)[^<]+</title>", "compflags": "0", "contextmenus": ",", "discrim": "urldata"}, "type": "thread"}, "buscar": {"type": "thread", "numid": 15, "params": {"url": "https://www.primewire.ag/?actor_name=woody+allen&sort=release", "regexp": "(?#<SEARCH>)https://www.primewire.ag/?<search>&sort=release", "searchkeys": "Title*search_keywords+Director*director+Starring*actor_name+Country*country", "compflags": "0", "contextmenus": ","}, "up": "pwire_copy", "name": "Buscar"}, "season": {"name": "season", "numid": 16, "up": "episode", "down": "pwire_movies_season_lnk", "params": {"url": "http://www.primewire.ag/watch-2727107-Revenge", "urlout": "/tv-", "urlin": "?tv", "compflags": "0", "regexp": "<h2>\\W+<a data-id=\"\\d+\" class=\"season-toggle\" href=\"(?P<url>.+?)\">&#9658; (?P<label>.+?)<span", "contextmenus": ",", "urldata": "TV Show"}, "type": "thread"}, "nav_tabs_playlist_list_lnk": {"params": {}, "numid": 17, "type": "link", "name": "nav_tabs", "up": "playlist_list"}, "season_pwire_movies_lnk": {"name": "season", "numid": 18, "up": "pwire_movies", "sibling": "nav_tabs", "params": {"source": true}, "type": "link"}, "playlist_media_season_lnk": {"name": "playlist_media", "numid": 19, "up": "season", "sibling": "pagediscrim_season_lnk", "params": {}, "type": "link"}, "episode": {"name": "episode", "numid": 20, "up": "listadded", "down": "season", "sibling": "playlist_media", "params": {"": "", "icondefflag": 1, "url": "http://www.primewire.ag/tv-2727107-Revenge/season-3", "labeldefflag": 1, "compflags": "re.DOTALL", "regexp": "<div class=\"tv_episode_item\"> <a href=\"(?P<url>.+?)\">(?P<label>E[0-9]+)\\W+?<span class=\"tv_episode_name\">(?P<label1>.+?)</span>", "contextmenus": ","}, "type": "thread"}}]
{"addon_id": "plugin.video.1channelide", "addon_requires": "xbmc.python,2.7.0,|script.module.urlresolver,2.4.0,|script.module.metahandler,2.7.0,|script.module.addon.common,2.0.0,|script.common.plugin.cache,2.5.5,", "addon_name": "1ChannelIDE", "addon_resources": "basicFunc.py,resources/lib/,True,basicFunc.py|CustomRegEx.py,resources/lib,True,CustomRegEx.py", "addon_fanart": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/PrimeWirwFanart.jpg", "addon_icon": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/PrimewireIcon.png"}
{"media": "def media():\n    import urlresolver\n    url = openUrl(args.get(\"url\")[0], validate = True)\n    if url.startswith(\"https://secure.link\"):\n        url = url[20:].decode('base64')\n        url = url.split('::', 1)[0]\n    if not url.startswith(\"http://www.primewire.ag\"):\n        regexp = r'http://(?P<videoHost>[^/]+)/(?P<videoId>[^.]+)'\n        match = re.search(regexp, url)\n        url = urlresolver.HostedMediaFile(host = match.group(\"videoHost\"), media_id = match.group(\"videoId\")).resolve()\n    else:\n        regexp = '<noframes>(?P<videourl>[^<]+)</noframes>'\n        compflags =re.DOTALL\n        url, data = openUrl(url)\n        subMenus = parseUrlContent(url, data, regexp, compflags )\n        videoUrl = subMenus[0][\"videourl\"]\n        url = urlresolver.HostedMediaFile(url = videoUrl).resolve()\n    li = xbmcgui.ListItem(path = url)\n    if args.get(\"icondef\", None): li.setThumbnailImage(args[\"icondef\"][0])\n    if args.get(\"labeldef\", None): li.setLabel(args[\"labeldef\"][0])\n    li.setProperty('IsPlayable', 'true')\n    li.setProperty('mimetype', 'video/x-msvideo')\n    return xbmcplugin.setResolvedUrl(handle=addon_handle,succeeded=True,listitem=li)\n", "_codeframe_": "<header>\n<rootmenu>\n\n\n<buscar>\n\n<pwire_copy>\n\n<pagediscrim>\n        \n\n# Deleted node playlist_sort\n\n<playlist_list>\n\n<playlist_media>\n\n<season>\n\n<episode>\n\n<nav_tabs>\n\n# Deleted node genre_list\n\n\n# Deleted node sort_list\n\n<pwire_movies>\n\n<listadded>\n\n<media>\n\n\n\nbase_url = sys.argv[0]\naddon_handle = int(sys.argv[1])\nargs = urlparse.parse_qs(sys.argv[2][1:])\nxbmcplugin.setContent(addon_handle, 'movies')\n\nmenu = args.get('menu', None)\n\nmenuFunc = menu[0] if menu else 'rootmenu'\nmenuItems = eval(menuFunc + '()')\nif menuItems: makeXbmcMenu(addon_handle, base_url, menuItems)\n"}
