["listaVideos", {"opcion2_vlist_lnk": {"params": {}, "numid": 1, "type": "link", "name": "opcion2", "up": "vlist"}, "srchvideos": {"name": "Search", "numid": 2, "up": "vlist", "down": "opcion2_srchvideos_lnk", "sibling": "opcion2_vlist_lnk", "params": {"url": "http://www.xvideos.com/?k=barranquilla", "regexp": "(?#<div id=\"video.+?\" class=\"thumb-block \" .img.src=iconImage .p.a{*=label href=videoUrl}>)", "compflags": "re.DOTALL|re.IGNORECASE", "enabled": false}, "type": "thread"}, "media": {"down": "listaVideos", "type": "thread", "numid": 3, "params": {"url": "http://www.movie25.tw/watch-school-dance-2014-48108-1171666.html", "regexp": "onclick=\"location.href='(?P<url>.+?)'\"  value=\"Click Here to Play\" />", "compflags": "re.DOTALL", "enabled": false}, "name": "media"}, "opcion1": {"name": "Tube8", "numid": 4, "up": "rootmenu", "down": "Content_opcion1_lnk", "sibling": "opcion2", "params": {"discrim": "option"}, "type": "list"}, "rootmenu": {"down": "opcion1", "type": "list", "numid": 5, "params": {"iconflag": 1, "iconimage": "tube8_icon.png, xvideos.png"}, "name": "rootmenu"}, "listaVideos": {"name": "listaVideos", "numid": 6, "up": "media", "down": "Content", "sibling": "vlist", "params": {"": "", "url": "http://www.tube8.com/mostdiscussed.html", "compflags": "re.DOTALL|re.IGNORECASE", "headregexp": "Categories: <->(?#<SPAN>)(?s)<div class=\"selected-filter sortBtn\" id=\"categoriesBtn\">\\W+<div class=\"arrow\"></div>\\W+(?P<label>[^<]+)</div>.+?</ul>|<li><a href=\"(?P<url>[^\"]+)\" >(?P<label>[^<]+)</a></li><=>Sort By: <->(?#<SPAN>)(?s)</div>\\W+(?P<label>[^<]+)</div>\\W+<ul [^>]*id=\"sortByList\"[^>]*>.+?</ul>|<li><a href=\"(?P<url>[^\"]+)\" >(?P<label>[^<]+)</a></li><=>Time Added: <->(?#<SPAN>)(?s)</div>\\W+(?P<label>[^<]+)</div>\\W+<ul [^>]*id=\"timeAddedList\"[^>]*>.+?</ul>|<li><a href=\"(?P<url>[^\"]+)\" >(?P<label>[^<]+)</a></li><=>Duration: <->(?#<SPAN>)(?s)</div>\\W+(?P<label>[^<]+)</div>\\W+<ul [^>]*id=\"durationList\"[^>]*>.+?</ul>|<li><a href=\"(?P<url>[^\"]+)\" >(?P<label>[^<]+)</a></li>", "regexp": "<img class=\"videoThumbs.+?src=\"(?P<iconImage>[^\"]+)\".+?<a href=\"(?P<videoUrl>[^\"]+)\" title=\"(?P<label>[^\"]+)\">.+?</a>", "contextmenus": ",", "nextregexp": "Next>>><->|</span></b>\\W+</li>\\W+<li>\\W+<b><a href=\"(?P<url>[^\"]+)\">"}, "type": "thread"}, "opcion2": {"name": "xVideos", "numid": 7, "up": "rootmenu", "down": "srchvideos_opcion2_lnk", "params": {"discrim": "option"}, "type": "list"}, "Content": {"name": "Content", "numid": 8, "up": "listaVideos", "down": "opcion1_Content_lnk", "params": {"url": "http://www.tube8.com", "regexp": "(?#<ul class=\"orientation-drop\" .a<href=url *=label>*>)", "compflags": "re.DOTALL|re.IGNORECASE", "plainnode": 1}, "type": "thread"}, "vlist_opcion2_lnk": {"params": {"source": true}, "numid": 9, "type": "link", "name": "vlist", "up": "opcion2"}, "opcion1_Content_lnk": {"params": {}, "numid": 10, "type": "link", "name": "opcion1", "up": "Content"}, "opcion2_srchvideos_lnk": {"params": {}, "numid": 11, "type": "link", "name": "opcion2", "up": "srchvideos"}, "Content_opcion1_lnk": {"params": {"source": true}, "numid": 12, "type": "link", "name": "Content", "up": "opcion1"}, "srchvideos_opcion2_lnk": {"name": "srchvideos", "numid": 13, "up": "opcion2", "sibling": "vlist_opcion2_lnk", "params": {"source": true}, "type": "link"}, "vlist": {"name": "New Videos", "numid": 14, "up": "media", "down": "srchvideos", "params": {"compflags": "re.DOTALL|re.IGNORECASE", "headregexp": "Sort by: <->(?#<ul li.*=\"Sort by\"<li class=\"selected\" a.*=label>>)|(?#<ul .li.*=\"Sort by\" <href=url *=label>*>)<=>Date: <->(?#<ul li.*=\"Date\"<li class=\"selected\" a.*=label>>)|(?#<ul .li.*=\"Date\" <href=url *=label>*>)<=>Duration: <->(?#<ul li.*=\"Duration\"<li class=\"selected\" a.*=label>>)|(?#<ul .li.*=\"Duration\" <href=url *=label>*>)", "url": "http://www.xvideos.com", "regexp": "(?#<div id=\"video.+?\" class=\"thumb-block \" .img.src=iconImage .p.a{*=label href=videoUrl}>)", "nextregexp": "Next>>><->|(?#<a class=\"no-page\" href=url>)"}, "type": "thread"}}]
{"addon_name": "Tube8", "addon_requires": "xbmc.python,2.1.0,", "addon_changelog": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/changelog.txt", "addon_resources": "basicFunc.py,resources/lib/,True,basicFunc.py|sesame.py,resources/lib/,True,sesame.py|CustomRegEx.py,resources/lib,True,CustomRegEx.py|xvideos.png,resources/media,False,images/xvideos.png|tube8_icon.png,resources/media,False,images/tube8_icon.png", "addon_fanart": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/tube8_fanart.jpg", "addon_icon": "C:/Users/Alex Montes Barrios/git/addonDevelopment/xbmc addon development/src/xbmcUI/images/tube8_icon.png", "addon_id": "plugin.video.tube8"}
{"srchvideos": "def srchvideos():\n    global args\n    dlg = xbmcgui.Dialog()\n    tosearch = dlg.input('Search videos with: ')\n    if not tosearch: return EMPTYCONTENT\n    url = 'http://www.xvideos.com/?' + urllib.urlencode(dict(k=tosearch))\n    args['url'] = [url]\n    args['menu'] = ['vlist']\n    return vlist()\n", "media": "def media():\n    url = args.get(\"videoUrl\", None)[0]\n    url, data = openUrl(url)\n    compflags = re.DOTALL\n    \n    if url.startswith('http://www.xvideos'):\n        regexp = r'_url=(?P<videoUrl>.+?)&'\n        encurl = re.findall(regexp, data, compflags)[0]\n        url = urllib.unquote(encurl)\n        pass\n    else:\n        regexp = '\"(?P<quality>quality_[0-9]+p)\":\"(?P<url>[^\"]+)\"'\n        qualities = re.findall(regexp, data, compflags)\n        encvideourl = ''\n        if qualities: quality, encvideourl = qualities.pop()\n        url = encvideourl.replace('\\/', '/')\n\n    li = xbmcgui.ListItem(path = url)\n    li.setProperty('IsPlayable', 'true')\n    li.setProperty('mimetype', 'video/x-msvideo')\n    return xbmcplugin.setResolvedUrl(handle     = addon_handle, succeeded=True, listitem=li)\n", "_codeframe_": "<header>\n\n<rootmenu>\n\n<opcion1>\n\n<opcion2>\n\n<srchvideos>\n\n\n\n\n# Deleted node xvideos\n\n<vlist>\n\n<Content>\n\n# Deleted node CategoryList\n\n# Deleted node CategoryFilter\n\n<listaVideos>\n\n<media>\n\n\n\n\n\n\n\nbase_url = sys.argv[0]\naddon_handle = int(sys.argv[1])\nargs = urlparse.parse_qs(sys.argv[2][1:])\nxbmcplugin.setContent(addon_handle, 'movies')\n\nmenu = args.get('menu', None)\n\nmenuFunc = menu[0] if menu else 'rootmenu'\nmenuItems = eval(menuFunc + '()')\nif menuItems: makeXbmcMenu(addon_handle, base_url, menuItems)\n"}
